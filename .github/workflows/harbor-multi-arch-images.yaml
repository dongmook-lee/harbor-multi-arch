name: Docker publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (optional)'
        required: false
  push:
    branches:
      - 'main'

jobs:
  docker-base-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        component:
          - trivy-adapter
          - core
          - db
          - exporter
          - jobservice
          - log
          - nginx
          - portal
          - prepare
          - redis
          - registry
          - registryctl

    defaults:
      run:
        working-directory: ./harbor

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          driver-opts: network=host
      - uses: docker/login-action@v2
        with:
          # registry: ghcr.io
          # username: ${{ github.actor }}
          # password: ${{ secrets.GITHUB_TOKEN }}
          registry: minregi.k3.acornsoft.io
          username: admin
          password: Pass0000@

      - run: cd .. && make patch

      - id: prepare
        run: echo "tag=$(cat ./version)"  >> $GITHUB_ENV

      - name: Compare Versions
        id: compare
        run: |
          version1="${{ env.tag }}"
          version2="v2.9.0"

          compareVersions() {
            local v1="$(awk '{ gsub(/^v/, ""); print }' <<< "$1")"
            local v2="$(awk '{ gsub(/^v/, ""); print }' <<< "$2")"
            awk -v n1="$num_1" -v n2="$last_version" 'BEGIN { if (n1 < n2) print "ver_check=true"; else print "ver_check=false" }'
          }

          ompareVersions "$version1" "$version2" >> $GITHUB_ENV

      - name: Check if component is db
        if: ${{ (matrix.component == 'db') && (env.ver_check == 'true') }}
        run: |
          bash ./scripts/convert.sh ./harbor/make/photon/${{ matrix.component }}/Dockerfile.base
          cat ./harbor/make/photon/${{ matrix.component }}/Dockerfile.base

      - name: Build base image
        uses: docker/build-push-action@v4
        with:
          context: ./harbor
          file: ./harbor/make/photon/${{ matrix.component }}/Dockerfile.base
          platforms: linux/amd64,linux/arm64
          # labels: |
          #   org.opencontainers.image.source=https://github.com/${{ github.repository }}
          #   org.opencontainers.image.revision=${{ env.tag }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: minregi.k3.acornsoft.io/test/harbor-${{ matrix.component }}-base:${{ env.tag }}

  docker-image:
    needs:
      - docker-base-image

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        component:
          - prepare
          - db
          - portal
          - core
          - jobservice
          - log
          - nginx
          - registryctl
          - trivy_adapter
          - redis
          - standalone_db_migrator
          - exporter

    defaults:
      run:
        working-directory: ./harbor

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-go@v3
        with:
          go-version: '^1.20.x'

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container
          driver-opts: network=host

      - run: cd .. && make patch

      - uses: docker/login-action@v2
        with:
          # registry: ghcr.io
          # username: ${{ github.actor }}
          # password: ${{ secrets.GITHUB_TOKEN }}
          registry: minregi.k3.acornsoft.io
          username: admin
          password: Pass0000@

      - id: prepare
        run: echo "tag=$(cat ./version)" >> $GITHUB_ENV

      # - name: Check if component is db
      #   if: ${{ (matrix.component == 'db') }}
      #   run: |
      #     bash ./scripts/convert.sh ./harbor/make/photon/${{ matrix.component }}/Dockerfile.base
      #     cat ./harbor/make/photon/${{ matrix.component }}/Dockerfile.base

      - name: Build & Publish images
        env:
          # IMAGENAMESPACE: ghcr.io/${{ github.repository }}
          # BASEIMAGENAMESPACE: ghcr.io/${{ github.repository }}
          # IMAGELABELS: org.opencontainers.image.source=https://github.com/${{ github.repository }}
          IMAGENAMESPACE: minregi.k3.acornsoft.io/test
          BASEIMAGENAMESPACE: minregi.k3.acornsoft.io/test
          IMAGELABELS: org.opencontainers.image.source=https://minregi.k3.acornsoft.io/test
          MULTIARCH: true
          TRIVYFLAG: true
          CHARTFLAG: true
          NOTARYFLAG: true
        run: |
          cd ./harbor;
          set -eux;

          CTX="BUILDBIN=true VERSIONTAG=${{ env.tag }} BASEIMAGETAG=${{ env.tag }} MULTIARCH=${MULTIARCH} "
          CTX+="IMAGENAMESPACE=${IMAGENAMESPACE} BASEIMAGENAMESPACE=${BASEIMAGENAMESPACE} TRIVYFLAG=${TRIVYFLAG} "
          CTX+="CHARTFLAG=${CHARTFLAG} NOTARYFLAG=${CHARTFLAG} IMAGELABELS=${IMAGELABELS}"

          make versions_prepare ${CTX};

          case ${{ matrix.component }} in
            core)                   make compile_core ${CTX} ;;
            jobservice)             make compile_jobservice ${CTX};;
            registryctl)            make compile_registryctl ${CTX};;
            standalone_db_migrator) make compile_standalone_db_migrator ${CTX} ;;
          esac;

          case ${{ matrix.component }} in
            exporter)    make build BUILDTARGET="_compile_and_build_exporter" ${CTX} ;;
            registryctl) make build BUILDTARGET="_build_registry _build_registryctl" ${CTX} ;;
            *)           make build BUILDTARGET="_build_${{ matrix.component }}" ${CTX} ;;
          esac;
